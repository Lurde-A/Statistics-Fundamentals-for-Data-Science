                                      INTRODUCTION
  1. To the right, you should see a virtual coin and die. Click the button to “Flip Coin and Roll Die” simultaneously. Repeat this a few times to get an intuition for the probability that 
both the coin comes up tails and the die comes up as a five. Do you have an estimate of this probability? After this lesson, you will know how to calculate it!
//
Yep, the probability is 1/12, no need for extra lesson (I know... I am a math genius :))

                                      UNION, INTERSECTION, AND COMPLEMENT
  2. To the right is an applet that shows two overlapping circles: A and B. The two dropdown menus allow you to choose from different events. Event A can be any of the following:
- The outcome of a die roll is even
- The outcome of a die roll is a five
- The outcome of a die roll is less than or equal to three
Event B can be any of the following:
- The outcome of a die roll is odd
- The outcome of a die roll is anything but five
- The outcome of a die roll is greater than or equal to two
Using the applet, find the INTERSECTION and UNION between the following two events:
    - The outcome of a die roll is less than or equal to three
//
INTERSECTION:
1st Die roll Less than or Equal to 3
2nd Die roll is not Five
    - The outcome of a die roll is anything but five
//
UNION:
1st Die roll is Less than or Equal to Three
2nd Die roll is not Five
Using the applet, find the COMPLEMENT of the following events:
    -The outcome of a die roll is greater than or equal to two
//
COMPLEMENT:
1st Die is Five
2nd Die roll is Odd
    -The outcome of a die roll is five
//
COMPLEMENT:
1st Die is Even
2nd Die roll is not Five

                                      INDEPENDENCE AND DEPENDENCE
GIVEN:
events_1 = "insert answer here"
events_2 = "insert answer here"
events_3 = "insert answer here"
  3. In quiz.py we have the following variables: events_1, events_2, and events_3. Given the two events outlined in these exercises, fill in the variables as either "dependent" or 
"independent". We pick out two cards from a standard deck of 52 cards without replacement. Event A is that we pick an Ace on the first draw. Event B is that we pick an Ace on the second 
draw. Are events A and B independent? Fill in your answer in the "insert answer here" section of the events_1 variable. After filling out your answer in quiz.py, hit run.
//
events_1 = "dependent"
  4. Suppose we roll a six-sided die two times. Event A is that we roll a 3 on the first roll. Event B is that we roll a 3 on the second roll. Are events A and B independent? Fill in your 
answer in the "insert answer here" section of the events_2 variable. After filling out your answer in quiz.py, hit run.
//
events_2 = "independent"
  5. Suppose we flip a coin ten times. Event A is that we flip all heads on the first five flips. Event B is that we flip all heads on the second five flips. Are events A and B independent?
Fill in your answer in the "insert answer here" section of the events_3 variable. After filling out your answer in quiz.py, hit run.
//
events_3 = "independent"

                                      MUTUALLY EXCLUSIVE EVENTS
GIVEN:
events_1 = "insert answer here"
events_2 = "insert answer here"
events_3 = "insert answer here"
  6. In quiz.py we have the following variables: events_1, events_2, and events_3. Given the two events outlined in these exercises, fill in the variables as either "mutually exclusive" 
or "not mutually exclusive". We have a bag of five marbles: three are green and two are blue. Suppose that we pick one marble from the bag. Event A is that the marble is green. Event B 
is that the marble is blue. Are these events mutually exclusive? Fill your answer in the events_1 variable where it says "insert answer here". After filling out your answer in quiz.py, 
hit run.
//
events_1 = "mutually exclusive"
  7. We roll a die once. Event A is rolling an odd number. Event B is rolling a number greater than four. Are these events mutually exclusive? Fill your answer in the events_2 variable 
where it says "insert answer here". After filling out your answer in quiz.py, hit run.
//
events_2 = "not mutually exclusive"
  8. We roll a die once. Event A is rolling an even number. Event B is rolling a number less than two. Are these events mutually exclusive? Fill your answer in the events_3 variable where 
it says "insert answer here". After filling out your answer in quiz.py, hit run.
//
events_3 = "mutually exclusive"

                                      ADDITION RULE
GIVEN:
def prob_a_or_b(a, b, all_possible_outcomes):
  # probability of event a
  prob_a = len(a)/len(all_possible_outcomes)	
  # probability of event b
  prob_b = len(b)/len(all_possible_outcomes)	
	# intersection of events a and b
  inter = a.intersection(b)	
	# probability of intersection of events a and b
  prob_inter = len(inter)/len(all_possible_outcomes)	
	# add return statement here
# rolling a die once and getting an even number or an odd number
evens = {2, 4, 6}
odds = {1, 3, 5}
all_possible_rolls = {1, 2, 3, 4, 5, 6}
# call function here first
# rolling a die once and getting an odd number or a number greater than 2
odds = {1, 3, 5}
greater_than_two = {3, 4, 5, 6}
all_possible_rolls = {1, 2, 3, 4, 5, 6}
# call function here second
# selecting a diamond card or a face card from a standard deck of cards
diamond_cards = {'ace_diamond', '2_diamond', '3_diamond', '4_diamond', '5_diamond', '6_diamond', '7_diamond', '8_diamond', '9_diamond', '10_diamond', 'jack_diamond', 'queen_diamond', 'king_diamond'}
face_cards = {'jack_diamond', 'jack_spade', 'jack_heart', 'jack_club', 'queen_diamond', 'queen_spade', 'queen_heart', 'queen_club', 'king_diamond', 'king_spade', 'king_heart', 'king_club'}
# all cards in a deck representing the entire sample space
all_possible_cards = {'ace_diamond', '2_diamond', '3_diamond', '4_diamond', '5_diamond', '6_diamond', '7_diamond', '8_diamond', '9_diamond', '10_diamond', 'jack_diamond', 'queen_diamond', 
'king_diamond', 'ace_heart', '2_heart', '3_heart', '4_heart', '5_heart', '6_heart', '7_heart', '8_heart', '9_heart', '10_heart', 'jack_heart', 'queen_heart', 'king_heart', 'ace_spade', 
'2_spade', '3_spade', '4_spade', '5_spade', '6_spade', '7_spade', '8_spade', '9_spade', '10_spade', 'jack_spade', 'queen_spade', 'king_spade', 'ace_club', '2_club', '3_club', '4_club', 
'5_club', '6_club', '7_club', '8_club', '9_club', '10_club', 'jack_club', 'queen_club', 'king_club'}
# call function here third
  9. In script.py, there is some code written out for you. First, there is a function, prob_a_or_b() which calculates the addition rule. It takes in three arguments:
a: an event with possible outcomes represented as a set
b: an event with possible outcomes represented as a set
all_possible_outcomes: a set that represents all possible outcomes of a sample space
In prob_a_or_b(), the probability of a and b as well as the probabilty of their intersection has been calculated in the following variables:
prob_a
prob_b
prob_inter
Using these variables, write a return statement that returns the probability of events a or b occurring.
//
return prob_a + prob_b - prob_inter
  10. In script.py, there are three different random events outlined through sets. The first one is below the following comment:
  # rolling a die once and getting an even number or an odd number
Call prob_a_or_b() using the following variables: evens, odds, all_possible_rolls.
Be sure to wrap your function call in a print() statement. Add your line of code below the following comment:
  # call function here first
Bonus: Try to calculate the probability using pencil and paper and compare it to the value you get using prob_a_or_b().
//
print(prob_a_or_b(evens, odds, all_possible_rolls))                              RESULT: 1.0
  11. The second random scenario is below the following comment:
# rolling a die once and getting an odd number or a number greater than 2
Call prob_a_or_b() using the following variables: odds, greater_than_two, all_possible_rolls.
Be sure to wrap your function call in a print() statement. Add your line of code below the following comment:
# call function here second
Bonus: Try to calculate the probability using pencil and paper and compare it to the value you get using prob_a_or_b().
//
print(prob_a_or_b(odds, greater_than_two, all_possible_rolls))                   RESULT: 0.8333333333333333
  12. The final random scenario is below the following comment:
# selecting a diamond card or a face card from a standard deck of cards
Call prob_a_or_b() using the following variables: diamond_cards, face_cards, all_possible_cards.
Be sure to wrap your function call in a print() statement. Add your line of code below the following comment:
# call function here third
Bonus: Try to calculate the probability using pencil and paper and compare it to the value you get using prob_a_or_b().
//
print(prob_a_or_b(diamond_cards, face_cards, all_possible_cards))                RESULT: 0.4230769230769231

                                      CONDITIONAL PROBABILITY
                                      MULTIPLICATION RULE
                                      CONDITIONAL PROBABILITY CONTINUED
                                      BAYES' THEOREM
  13. •	20 percent of the population has strep throat.
      •	80 percent of the population does not have strep throat
      •	If a person has strep throat, there is an 85% chance their test will be positive and a 15% chance it will be negative.
      •	If a person does not have strep thrat, there is a 98% chance their test will be negative and a 2% chance it will be positive. This can be labeled as:

      Find: P(ST∣+)      RESULT: 0,913978495
      Find: P(ST∣−)      RESULT: 0,0368550369
      Find: P(NO ST∣+)   RESULT: 0,0860215054
      Find: P(NO ST∣-)   RESULT: 0,963144963
